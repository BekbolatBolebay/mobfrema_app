"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { CheckCircle, ExternalLink, Globe } from "lucide-react"

export default function DomainSetup() {
  const [selectedOption, setSelectedOption] = useState<string>("vercel")

  const options = [
    {
      id: "vercel",
      name: "Vercel —Ç–µ–≥—ñ–Ω –¥–æ–º–µ–Ω—ñ",
      domain: "mobframe.vercel.app",
      price: "–¢–ï–ì–Ü–ù",
      setup: "1 –º–∏–Ω—É—Ç",
      pros: ["–ê–≤—Ç–æ–º–∞—Ç—Ç—ã SSL", "–ñ—ã–ª–¥–∞–º CDN", "–õ–µ–∑–¥–µ –æ—Ä–Ω–∞—Ç—É"],
      cons: ["Vercel –±—Ä–µ–Ω–¥–∏–Ω–≥—ñ"],
      recommended: true,
    },
    {
      id: "xyz",
      name: ".xyz –¥–æ–º–µ–Ω—ñ",
      domain: "mobframe.xyz",
      price: "$1.99/–∂—ã–ª",
      setup: "5 –º–∏–Ω—É—Ç",
      pros: ["–ê—Ä–∑–∞–Ω", "–ó–∞–º–∞–Ω–∞—É–∏", "–ö”ô—Å—ñ–±–∏"],
      cons: ["–ñ–∞“£–∞ TLD"],
      recommended: false,
    },
    {
      id: "kz",
      name: ".kz –¥–æ–º–µ–Ω—ñ",
      domain: "mobframe.kz",
      price: "$20/–∂—ã–ª",
      setup: "1-2 –∫“Ø–Ω",
      pros: ["–ñ–µ—Ä–≥—ñ–ª—ñ–∫—Ç—ñ", "SEO –∂–∞“õ—Å—ã", "–°–µ–Ω—ñ–º–¥—ñ"],
      cons: ["“ö—ã–º–±–∞—Ç", "“ö“±–∂–∞—Ç—Ç–∞—Ä –∫–µ—Ä–µ–∫"],
      recommended: false,
    },
  ]

  const handleSetup = (optionId: string) => {
    const setupInstructions = {
      vercel: "1. Vercel-–≥–µ –¥–µ–ø–ª–æ–π –∂–∞—Å–∞“£—ã–∑\n2. –ê–≤—Ç–æ–º–∞—Ç—Ç—ã –¥–æ–º–µ–Ω –±–µ—Ä—ñ–ª–µ–¥—ñ\n3. SSL –∞–≤—Ç–æ–º–∞—Ç—Ç—ã –æ—Ä–Ω–∞–π–¥—ã",
      xyz: "1. Namecheap.com-“ì–∞ –∫—ñ—Ä—ñ“£—ñ–∑\n2. .xyz –¥–æ–º–µ–Ω —ñ–∑–¥–µ“£—ñ–∑\n3. –°–∞—Ç—ã–ø –∞–ª—ã“£—ã–∑\n4. Vercel-–≥–µ “õ–æ—Å—ã“£—ã–∑",
      kz: "1. nic.kz —Å–∞–π—Ç—ã–Ω–∞ –∫—ñ—Ä—ñ“£—ñ–∑\n2. “ö“±–∂–∞—Ç—Ç–∞—Ä–¥—ã –¥–∞–π—ã–Ω–¥–∞“£—ã–∑\n3. –î–æ–º–µ–Ω —Ç—ñ—Ä–∫–µ“£—ñ–∑\n4. DNS –æ—Ä–Ω–∞—Ç—ã“£—ã–∑",
    }

    alert(`${optionId} –¥–æ–º–µ–Ω—ñ –æ—Ä–Ω–∞—Ç—É:\n\n${setupInstructions[optionId]}`)
  }

  return (
    <div className="space-y-4">
      <div className="text-center mb-6">
        <h2 className="text-2xl font-bold text-white mb-2">–î–æ–º–µ–Ω —Ç–∞“£–¥–∞—É</h2>
        <p className="text-gray-400">MobFrame –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Å—ã “Ø—à—ñ–Ω –µ“£ –∂–∞“õ—Å—ã –æ–ø—Ü–∏—è–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑</p>
      </div>

      <div className="grid gap-4">
        {options.map((option) => (
          <Card
            key={option.id}
            className={`cursor-pointer transition-all ${
              selectedOption === option.id
                ? "bg-gray-700 border-cyan-400"
                : "bg-gray-800 border-gray-700 hover:border-gray-600"
            }`}
            onClick={() => setSelectedOption(option.id)}
          >
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <CardTitle className="text-white text-lg">{option.name}</CardTitle>
                <div className="flex items-center space-x-2">
                  {option.recommended && <Badge className="bg-cyan-600">“∞—Å—ã–Ω—ã–ª–∞–¥—ã</Badge>}
                  <Badge variant="outline" className="text-green-400 border-green-400">
                    {option.price}
                  </Badge>
                </div>
              </div>
              <div className="flex items-center text-gray-400">
                <Globe className="w-4 h-4 mr-2" />
                <span className="font-mono">{option.domain}</span>
              </div>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="text-sm text-gray-400">–û—Ä–Ω–∞—Ç—É —É–∞“õ—ã—Ç—ã: {option.setup}</div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <h4 className="text-green-400 text-sm font-medium mb-1">–ê—Ä—Ç—ã“õ—à—ã–ª—ã“õ—Ç–∞—Ä—ã:</h4>
                  <ul className="text-xs text-gray-300 space-y-1">
                    {option.pros.map((pro, index) => (
                      <li key={index} className="flex items-center">
                        <CheckCircle className="w-3 h-3 text-green-400 mr-1" />
                        {pro}
                      </li>
                    ))}
                  </ul>
                </div>
                <div>
                  <h4 className="text-yellow-400 text-sm font-medium mb-1">–ö–µ–º—à—ñ–ª—ñ–∫—Ç–µ—Ä—ñ:</h4>
                  <ul className="text-xs text-gray-300 space-y-1">
                    {option.cons.map((con, index) => (
                      <li key={index} className="flex items-center">
                        <span className="w-3 h-3 text-yellow-400 mr-1">‚ö†</span>
                        {con}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>

              {selectedOption === option.id && (
                <Button onClick={() => handleSetup(option.id)} className="w-full bg-cyan-600 hover:bg-cyan-700 mt-3">
                  <ExternalLink className="w-4 h-4 mr-2" />
                  –û—Ä–Ω–∞—Ç—É–¥—ã –±–∞—Å—Ç–∞—É
                </Button>
              )}
            </CardContent>
          </Card>
        ))}
      </div>

      {/* “∞—Å—ã–Ω—ã—Å */}
      <Card className="bg-blue-900/20 border-blue-600">
        <CardContent className="p-4">
          <h3 className="text-blue-400 font-medium mb-2">üí° –ú–µ–Ω—ñ“£ “±—Å—ã–Ω—ã—Å—ã–º:</h3>
          <p className="text-gray-300 text-sm">
            <strong>–ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω:</strong> Vercel —Ç–µ–≥—ñ–Ω –¥–æ–º–µ–Ω—ñ (mobframe.vercel.app)
            <br />
            <strong>–ö–µ–π—ñ–Ω:</strong> –¢–∞–±—ã—Å—Ç—ã –±–æ–ª“ì–∞–Ω–¥–∞ .kz –Ω–µ–º–µ—Å–µ .com —Å–∞—Ç—ã–ø –∞–ª—ã“£—ã–∑
          </p>
        </CardContent>
      </Card>
    </div>
  )
}
