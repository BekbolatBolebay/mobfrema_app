"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { payboxService } from "@/lib/payments/paybox"
import { Loader2, CreditCard, Smartphone } from "lucide-react"

interface PayBoxPaymentProps {
  amount: number
  description: string
  orderId: string
  onSuccess?: (paymentId: string) => void
  onError?: (error: string) => void
}

export default function PayBoxPayment({ amount, description, orderId, onSuccess, onError }: PayBoxPaymentProps) {
  const [loading, setLoading] = useState(false)
  const [userEmail, setUserEmail] = useState("")
  const [userPhone, setUserPhone] = useState("")

  const handlePayment = async () => {
    if (!userEmail && !userPhone) {
      onError?.("–≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞ –Ω–µ–º–µ—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑")
      return
    }

    setLoading(true)

    try {
      const result = await payboxService.createPayment({
        amount,
        description,
        orderId,
        userEmail: userEmail || undefined,
        userPhone: userPhone || undefined,
      })

      if (result.success && result.paymentUrl) {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã PayBox
        window.location.href = result.paymentUrl
      } else {
        onError?.(result.error || "–¢”©–ª–µ–º –∂–∞—Å–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã")
      }
    } catch (error) {
      onError?.("–ñ–µ–ª—ñ “õ–∞—Ç–µ—Å—ñ")
    } finally {
      setLoading(false)
    }
  }

  return (
    <Card className="w-full max-w-md mx-auto bg-gray-800 border-gray-700">
      <CardHeader>
        <CardTitle className="text-white text-center flex items-center justify-center">
          <CreditCard className="w-5 h-5 mr-2" />
          PayBox —Ç”©–ª–µ–º—ñ
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* –°—É–º–º–∞ */}
        <div className="text-center">
          <div className="text-3xl font-bold text-cyan-400">{amount.toLocaleString()} ‚Ç∏</div>
          <p className="text-gray-300 text-sm mt-1">{description}</p>
        </div>

        {/* –ü–æ–ª—è –≤–≤–æ–¥–∞ */}
        <div className="space-y-3">
          <div>
            <Label htmlFor="email" className="text-gray-300">
              –≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞
            </Label>
            <Input
              id="email"
              type="email"
              value={userEmail}
              onChange={(e) => setUserEmail(e.target.value)}
              placeholder="example@mail.com"
              className="bg-gray-700 border-gray-600 text-white"
            />
          </div>

          <div className="text-center text-gray-400 text-sm">–Ω–µ–º–µ—Å–µ</div>

          <div>
            <Label htmlFor="phone" className="text-gray-300">
              –¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ
            </Label>
            <Input
              id="phone"
              type="tel"
              value={userPhone}
              onChange={(e) => setUserPhone(e.target.value)}
              placeholder="+7 (___) ___-__-__"
              className="bg-gray-700 border-gray-600 text-white"
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
        <Button
          onClick={handlePayment}
          disabled={loading || (!userEmail && !userPhone)}
          className="w-full bg-cyan-600 hover:bg-cyan-700 h-12"
        >
          {loading ? (
            <>
              <Loader2 className="w-4 h-4 mr-2 animate-spin" />
              –¢”©–ª–µ–º –∂–∞—Å–∞–ª—É–¥–∞...
            </>
          ) : (
            <>
              <Smartphone className="w-4 h-4 mr-2" />
              –¢”©–ª–µ—É
            </>
          )}
        </Button>

        {/* –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–∞—Ä—Ç—ã */}
        <div className="text-center">
          <p className="text-gray-400 text-xs mb-2">“ö–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç—ñ–ª–µ—Ç—ñ–Ω –∫–∞—Ä—Ç–∞–ª–∞—Ä:</p>
          <div className="flex justify-center space-x-2">
            <div className="bg-blue-600 text-white px-2 py-1 rounded text-xs">Visa</div>
            <div className="bg-red-600 text-white px-2 py-1 rounded text-xs">MasterCard</div>
            <div className="bg-green-600 text-white px-2 py-1 rounded text-xs">–ö–∞–∑–∫–∞—Ä—Ç</div>
          </div>
        </div>

        {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
        <div className="text-center text-gray-500 text-xs">üîí “ö–∞—É—ñ–ø—Å—ñ–∑ —Ç”©–ª–µ–º PayBox.kz –∞—Ä“õ—ã–ª—ã</div>
      </CardContent>
    </Card>
  )
}
